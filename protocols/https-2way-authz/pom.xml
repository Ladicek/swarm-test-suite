<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.thorntail.ts</groupId>
        <artifactId>ts-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../..</relativePath>
    </parent>

    <artifactId>ts-protocols-https-2way-authz</artifactId>
    <packaging>war</packaging>

    <name>Thorntail TS: Protocols: HTTPS: Two-way SSL + Authorization</name>

    <dependencies>
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>management</artifactId>
        </dependency>
        <dependency>
            <!--
              - We don't really need the `ee-security` fraction here, just `security`. That, however, is an internal
              - fraction. (Which is likely a bug, or perhaps `undertow` should bring in `security` transitively.)
              - Using `ee-security` is the least invasive way if we don't use `jaxrs`, `ejb` or similar fractions
              - that already bring in `security` transitively.
              -->
            <groupId>io.thorntail</groupId>
            <artifactId>ee-security</artifactId>
        </dependency>
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>undertow</artifactId>
        </dependency>

        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>arquillian</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>server-keystore</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <configuration>
                            <keystore>${project.build.directory}/server-keystore.jks</keystore>
                            <storepass>server-password</storepass>
                            <alias>server-key</alias>
                            <keypass>server-password</keypass>
                            <dname>CN=localhost</dname>
                            <sigalg>SHA1withRSA</sigalg>
                            <validity>100</validity>
                            <keyalg>RSA</keyalg>
                            <keysize>2048</keysize>
                        </configuration>
                    </execution>
                    <execution>
                        <id>server-certificate</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exportCertificate</goal>
                        </goals>
                        <configuration>
                            <keystore>${project.build.directory}/server-keystore.jks</keystore>
                            <storepass>server-password</storepass>
                            <alias>server-key</alias>
                            <file>${project.build.directory}/server-cert.cer</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>client-truststore</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <file>${project.build.directory}/server-cert.cer</file>
                            <keystore>${project.build.directory}/client-truststore.jks</keystore>
                            <storepass>client-password</storepass>
                            <alias>server-cert</alias>
                            <keypass>client-password</keypass>
                            <noprompt>true</noprompt>
                        </configuration>
                    </execution>

                    <execution>
                        <id>client-keystore</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <configuration>
                            <keystore>${project.build.directory}/client-keystore.jks</keystore>
                            <storepass>client-password</storepass>
                            <alias>client-key</alias>
                            <keypass>client-password</keypass>
                            <dname>CN=client</dname>
                            <sigalg>SHA1withRSA</sigalg>
                            <validity>100</validity>
                            <keyalg>RSA</keyalg>
                            <keysize>2048</keysize>
                        </configuration>
                    </execution>
                    <execution>
                        <id>client-certificate</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exportCertificate</goal>
                        </goals>
                        <configuration>
                            <keystore>${project.build.directory}/client-keystore.jks</keystore>
                            <storepass>client-password</storepass>
                            <alias>client-key</alias>
                            <file>${project.build.directory}/client-cert.cer</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>server-truststore-client</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <file>${project.build.directory}/client-cert.cer</file>
                            <keystore>${project.build.directory}/server-truststore.jks</keystore>
                            <storepass>server-password</storepass>
                            <alias>client-cert</alias>
                            <keypass>server-password</keypass>
                            <noprompt>true</noprompt>
                        </configuration>
                    </execution>

                    <execution>
                        <id>guest-client-keystore</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <configuration>
                            <keystore>${project.build.directory}/guest-client-keystore.jks</keystore>
                            <storepass>client-password</storepass>
                            <alias>guest-client-key</alias>
                            <keypass>client-password</keypass>
                            <dname>CN=guest-client</dname>
                            <sigalg>SHA1withRSA</sigalg>
                            <validity>100</validity>
                            <keyalg>RSA</keyalg>
                            <keysize>2048</keysize>
                        </configuration>
                    </execution>
                    <execution>
                        <id>guest-client-certificate</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exportCertificate</goal>
                        </goals>
                        <configuration>
                            <keystore>${project.build.directory}/guest-client-keystore.jks</keystore>
                            <storepass>client-password</storepass>
                            <alias>guest-client-key</alias>
                            <file>${project.build.directory}/guest-client-cert.cer</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>server-truststore-guest-client</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <file>${project.build.directory}/guest-client-cert.cer</file>
                            <keystore>${project.build.directory}/server-truststore.jks</keystore>
                            <storepass>server-password</storepass>
                            <alias>guest-client-cert</alias>
                            <keypass>server-password</keypass>
                            <noprompt>true</noprompt>
                        </configuration>
                    </execution>

                    <execution>
                        <id>unknown-client-keystore</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <configuration>
                            <keystore>${project.build.directory}/unknown-client-keystore.jks</keystore>
                            <storepass>client-password</storepass>
                            <alias>client-key</alias>
                            <keypass>client-password</keypass>
                            <dname>CN=unknown-client</dname>
                            <sigalg>SHA1withRSA</sigalg>
                            <validity>100</validity>
                            <keyalg>RSA</keyalg>
                            <keysize>2048</keysize>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
